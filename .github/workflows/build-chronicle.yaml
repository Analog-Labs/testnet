name: Compile chronicle node

on:
  pull_request:
    paths-ignore:
    - 'contracts/**'
    - 'docker/**'
    - 'docs/**'
    - 'node/**'
    - 'infra/**'
    - 'js/**'
    - 'scripts/**'
    - 'tester/**'
    - 'utils/**'
    - '**/*.md'

concurrency:
   group: ${{ github.workflow }}-${{ github.ref }}
   cancel-in-progress: true

jobs:
  build-chronicle:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - profile: testnet
          features: default
        - profile: testnet
          features: development
    steps:
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y musl-tools protobuf-compiler
    - name: Checkout sources
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        submodules: recursive
    - name: Install rust toolchain
      run : rustup show
    - name: Setup and cache sccache
      uses: visvirial/sccache-action@v1.0.1
      with:
        cache-key: sccache-chronicle-${{ matrix.profile }}
    - name: Cache cargo registry and index
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-cache-chronicle-${{ hashFiles('Cargo.lock') }}
        restore-keys: cargo-cache-chronicle-
    - name: Cache cargo build output
      uses: actions/cache@v3
      with:
        path: target
        key: cargo-build-chronicle-${{ matrix.profile }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: cargo-build-chronicle-${{ matrix.profile }}-
    - name: Build chronicle node
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p chronicle --profile ${{ matrix.profile }} --features ${{ matrix.profile }},${{ matrix.features }}
    - name: Upload chronicle node
      uses: actions/upload-artifact@v4
      with:
        name: chronicle_${{ matrix.profile }}_${{ matrix.features }}
        path: target/${{ matrix.profile }}/chronicle
