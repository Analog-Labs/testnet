name: Build Docker timechain node image

on:
  push:
    branches:
      - "ci/binary/**"
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REPO: analoglabs/timenode

jobs:
  set-tags:
    name: Get & set tags
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get-sha.outputs.sha }}
      commit_hash8: ${{ steps.get-sha.outputs.sha8 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get SHA
        id: get-sha
        run: |
          sha=$(git log -1 --format='%H')
          echo "sha=$sha" >> $GITHUB_OUTPUT
          echo "sha8=$(git log -1 --format='%H' | cut -c1-8)" >> $GITHUB_OUTPUT
          echo "SHA commit:" $sha

  build-binary:
    name: Build Docker image
    needs: ["set-tags"]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - image: timechain 
          profile: production
          features: default
          build-variant: prod
        - image: testnet 
          profile: testnet
          features: default
          build-variant: test
        - image: development 
          profile: testnet
          features: development
          build-variant: dev
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REPO }}-${{ matrix.image }}:${{ needs.set-tags.outputs.commit_hash8 }}
          file: config/docker/Dockerfile.release
          build-args: |
            VCS_REF=${{ needs.set-tags.outputs.commit_hash8 }}
            PROFILE=${{ matrix.profile }}
            FEATURES=${{ matrix.features }}
            BUILD_VARIANT=${{ matrix.build-variant }}