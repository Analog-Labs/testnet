##########################################################
#
#  Workflow for building the tester image. It's a CLI tool
#  used in deployment scripts and apps. The tester CLI 
#  image includes the tester binary and the compiled 
#  contracts.
#
##########################################################
name: Build Docker tester image

on:
  push:
    paths:
      - 'tester/**'
      - 'primitives/**'
      - 'tc-subxt/**'
      - 'contracts/**'
    branches:
      - 'development'

env:
  DOCKER_REPO: analoglabs/tester

jobs:
  set-tags:
    name: Get & set tags
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get-sha.outputs.sha }}
      commit_hash8: ${{ steps.get-sha.outputs.sha8 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get SHA
        id: get-sha
        run: |
          sha=$(git log -1 --format='%H')
          echo "sha=$sha" >> $GITHUB_OUTPUT
          echo "sha8=$(git log -1 --format='%H' | cut -c1-8)" >> $GITHUB_OUTPUT
          echo "SHA commit:" $sha

  build-binary:
    name: Build Docker image
    needs: ["set-tags"]
    runs-on: ubuntu-latest
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup Cargo
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Build contracts
        run: forge build
      - name: Build tester
        run: cargo build --release -p tester
      - name: Copy contracts
        run: cp -r target/release/tester tester-bin
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./target/release
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ needs.set-tags.outputs.commit_hash8 }}
            ${{ env.DOCKER_REPO }}:latest
          file: config/docker/Dockerfile.tester-release
