name: Build runtime artifacts
on:
  workflow_dispatch:
  push:
    branches:
      - "ci/runtime/**"
jobs:
  set-tags:
    name: Get & set tags
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get-sha.outputs.sha }}
      commit_hash8: ${{ steps.get-sha.outputs.sha8 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get SHA
        id: get-sha
        run: |
          sha=$(git log -1 --format='%H')
          echo "sha=$sha" >> $GITHUB_OUTPUT
          echo "sha8=$(git log -1 --format='%H' | cut -c1-8)" >> $GITHUB_OUTPUT
          echo "SHA commit:" $sha
  build-runtime:
    name: Build runtimes
    needs: ["set-tags"]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Name denotes the artifact name in the workflow run
          - name: mainnet
            chain: mainnet
            features: default
          - name: staging
            chain: mainnet
            features: development
          - name: testnet
            chain: testnet
            features: default
          - name: development
            chain: testnet
            features: development
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v4
      - name: Build timechain runtime
        id: srtool_build
        uses: chevdor/srtool-actions@v0.8.0
        env:
          BUILD_OPTS: --features ${{ matrix.features }}
        with:
          image: analoglabs/srtool
          tag: 1.79.0
          chain: ${{ matrix.chain }}
          runtime_dir: runtimes/${{ matrix.chain }}
      - name: Srtool summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq . > timechain-srtool-digest.json
          cat timechain-srtool-digest.json
          echo "Runtime location: ${{ steps.srtool_build.outputs.wasm_compressed }}"
      - name: Upload timechain runtime artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-runtime
          if-no-files-found: error
          path: |
            ${{ steps.srtool_build.outputs.wasm_compressed }}
            timechain-srtool-digest.json
  upgrade-runtime:
    name: Runtime upgrade
    # Only running when manually triggered
    if: github.event_name == 'workflow_dispatch'
    needs: [ "build-runtime" ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Download runtime benchmarks
      uses: actions/download-artifact@v4
      with:
        # NOTE: the assumption is that it will only deploy on development envs
        # Later we can add an input to specify what the target should be
        name: development-runtime
    - name: Extract runtime
      run: |
        ls -la
        find runtimes/* -type f -name "*.wasm"
        WASM_PATH=$(find runtimes/* -type f -name "*.wasm")
        
        cp $WASM_PATH development-runtime.wasm

        docker run -it --rm \
          -v ./config/envs/local/config.yaml:/etc/config.yaml \
          -v development-runtime.wasm:/etc/development-runtime.wasm \
          -e TIMECHAIN_MNEMONIC="${{ secrets.SUDO_MNEMONIC }}" \
          analoglabs/tc-cli:latest \
          --config /etc/config.yaml runtime-upgrade /etc/development-runtime.wasm