services:
  validator:
    image: 'analoglabs/timechain-node'
    command:
    - '--base-path=/data'
    - '--chain=notss'
    - '--rpc-cors=all'
    - '--unsafe-rpc-external'
    - '--rpc-methods=unsafe'
    - '--prometheus-external'
    - '--prometheus-port=9090'
    - '--alice'
    - '--validator'
    - '--node-key=0000000000000000000000000000000000000000000000000000000000000001'
    labels:
      prometheus-scrape.enabled: 'true'
    ports:
      - 9944:9944
    profiles:
    - ethereum
    - astar

  ethereum:
    image: 'ethereum/client-go:v1.13.14'
    command:
    - '--dev'
    - '--dev.gaslimit=30000000'
    - '--ipcdisable'
    - '--dev.period=2'
    - '--http'
    - '--http.addr=0.0.0.0'
    - '--http.port=8545'
    - '--http.vhosts=*'
    - '--http.corsdomain=*'
    - '--http.api=eth,debug,admin,txpool,web3,net'
    - '--ws'
    - '--ws.addr=0.0.0.0'
    - '--ws.port=8545'
    - '--ws.origins=*'
    - '--ws.api=eth,debug,admin,txpool,web3,net'
    profiles:
    - ethereum
    ports:
    - 8545:8545

  astar:
    image: "staketechnologies/astar-collator:v5.28.0-rerun"
    command:
    - 'astar-collator'
    - '--base-path=/data'
    - '--chain=dev'
    - '--rpc-cors=all'
    - '--rpc-external'
    - '--alice'
    - '--enable-evm-rpc'
    - '--no-mdns'
    profiles:
    - astar

  chronicle-eth1:
    image: 'analoglabs/chronicle'
    command:
    - '--network-id=3'
    # - '--network-port=6881'
    - '--target-url=ws://ethereum:8545'
    - '--timechain-url=ws://validator:9944'
    - '--target-keyfile=/etc/target_keyfile'
    - '--timechain-keyfile=/etc/timechain_keyfile'
    environment:
      RUST_LOG: 'chronicle=debug,tss=debug'
      RUST_BACKTRACE: 1
    depends_on:
    - validator
    - ethereum
    restart: 'always'
    volumes:
    - './config/wallets/keyfile:/etc/target_keyfile:ro'
    - './config/wallets/timechain_keyfile1:/etc/timechain_keyfile:ro'
    labels:
      prometheus-scrape.enabled: 'true'
    profiles:
    - ethereum
    ports:
    - 9090:9090

  chronicle-astar1:
    image: 'analoglabs/chronicle'
    command:
    - '--network-id=6'
    - '--target-url=ws://astar:9944'
    - '--timechain-url=ws://validator:9944'
    - '--target-keyfile=/etc/target_keyfile'
    - '--timechain-keyfile=/etc/timechain_keyfile'
    environment:
      RUST_LOG: 'chronicle=debug,tss=debug'
      RUST_BACKTRACE: 1
    depends_on:
    - validator
    - astar
    restart: 'always'
    volumes:
    - './config/wallets/keyfile:/etc/target_keyfile:ro'
    - './config/wallets/timechain_keyfile2:/etc/timechain_keyfile:ro'
    labels:
      prometheus-scrape.enabled: 'true'
    profiles:
    - astar

  tester:
    image: 'analoglabs/timechain-tester'
    profiles:
    - tester
    # environment:
      # RUST_LOG: 'tc-subxt=debug,tester=debug'
      # RUST_BACKTRACE: 1
    volumes:
    - '/var/run/docker.sock:/var/run/docker.sock'
    - './config/wallets/keyfile:/etc/keyfile:ro'
    - './config/wallets/alice:/etc/alice:ro'
    - './out:/etc/contracts:ro'

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
    - ./config/prometheus/:/etc/prometheus/
    - prometheus-docker-sd:/prometheus-docker-sd:ro
    command:
    - '--config.file=/etc/prometheus/prometheus.yaml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
    - 9090:9090
    restart: always
    profiles:
    - prometheus
    - grafana

  prometheus-docker-sd:
    image: "stucky/prometheus-docker-sd:latest"
    restart: unless-stopped
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - prometheus-docker-sd:/prometheus-docker-sd:rw
    profiles:
    - prometheus
    - grafana

  loki:
    image: grafana/loki:2.9.0
    ports:
    - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    profiles:
    - loki
    - grafana

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
    - ./config/promtail/promtail.yaml:/etc/promtail/docker-config.yaml
    - /var/lib/docker/containers:/var/lib/docker/containers:ro
    - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    profiles:
    - loki
    - grafana

  grafana:
    image: grafana/grafana
    ports:
    - 3000:3000
    volumes:
    - ./config/grafana/:/etc/grafana/provisioning/
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
    - prometheus
    - loki
    restart: always
    profiles:
    - grafana

volumes:
  prometheus-docker-sd:
