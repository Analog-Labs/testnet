
//! Autogenerated weights for `eth_bridge`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.1
//! DATE: 2025-02-11, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ns1026992`, CPU: `AMD EPYC 4244P 6-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/testnet/timechain-node
// benchmark
// pallet
// --pallet
// eth_bridge
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./runtime/src/weights/testnet/eth_bridge.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use polkadot_sdk::*;

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `eth_bridge`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> eth_bridge::WeightInfo for WeightInfo<T> {
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::BridgeStatuses` (r:1 w:0)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredAsset` (r:1 w:0)
	/// Proof: `EthBridge::RegisteredAsset` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeAccount` (r:1 w:0)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestSubmissionHeight` (r:0 w:1)
	/// Proof: `EthBridge::RequestSubmissionHeight` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transfer_to_sidechain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `602`
		//  Estimated: `6196`
		// Minimum execution time: 88_676_000 picoseconds.
		Weight::from_parts(90_860_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `EthBridge::BridgeStatuses` (r:1 w:0)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestSubmissionHeight` (r:0 w:1)
	/// Proof: `EthBridge::RequestSubmissionHeight` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_from_sidechain() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3796`
		// Minimum execution time: 26_850_000 picoseconds.
		Weight::from_parts(27_181_000, 0)
			.saturating_add(Weight::from_parts(0, 3796))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `EthBridge::BridgeAccount` (r:1 w:0)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:0 w:2)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::LoadToIncomingRequestHash` (r:0 w:1)
	/// Proof: `EthBridge::LoadToIncomingRequestHash` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_incoming_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `446`
		//  Estimated: `3911`
		// Minimum execution time: 40_706_000 picoseconds.
		Weight::from_parts(41_398_000, 0)
			.saturating_add(Weight::from_parts(0, 3911))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `EthBridge::BridgeAccount` (r:1 w:0)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:0)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn finalize_incoming_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `882`
		//  Estimated: `6196`
		// Minimum execution time: 77_976_000 picoseconds.
		Weight::from_parts(79_910_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `EthBridge::Peers` (r:1 w:0)
	/// Proof: `EthBridge::Peers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:0)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredSidechainToken` (r:1 w:0)
	/// Proof: `EthBridge::RegisteredSidechainToken` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeSignatureVersions` (r:1 w:0)
	/// Proof: `EthBridge::BridgeSignatureVersions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeContractAddress` (r:1 w:0)
	/// Proof: `EthBridge::BridgeContractAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestApprovals` (r:1 w:1)
	/// Proof: `EthBridge::RequestApprovals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingPeer` (r:1 w:0)
	/// Proof: `EthBridge::PendingPeer` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:0)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn approve_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `835`
		//  Estimated: `4300`
		// Minimum execution time: 189_665_000 picoseconds.
		Weight::from_parts(191_108_000, 0)
			.saturating_add(Weight::from_parts(0, 4300))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `EthBridge::Peers` (r:1 w:0)
	/// Proof: `EthBridge::Peers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:0)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredSidechainToken` (r:1 w:0)
	/// Proof: `EthBridge::RegisteredSidechainToken` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeSignatureVersions` (r:1 w:0)
	/// Proof: `EthBridge::BridgeSignatureVersions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeContractAddress` (r:1 w:0)
	/// Proof: `EthBridge::BridgeContractAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestApprovals` (r:1 w:1)
	/// Proof: `EthBridge::RequestApprovals` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingPeer` (r:1 w:0)
	/// Proof: `EthBridge::PendingPeer` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredAsset` (r:1 w:0)
	/// Proof: `EthBridge::RegisteredAsset` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeAccount` (r:1 w:0)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn approve_request_finalize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1297`
		//  Estimated: `4762`
		// Minimum execution time: 222_046_000 picoseconds.
		Weight::from_parts(223_198_000, 0)
			.saturating_add(Weight::from_parts(0, 4762))
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `EthBridge::BridgeAccount` (r:1 w:0)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:0)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn abort_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `777`
		//  Estimated: `4242`
		// Minimum execution time: 38_883_000 picoseconds.
		Weight::from_parts(39_714_000, 0)
			.saturating_add(Weight::from_parts(0, 4242))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `EthBridge::NextNetworkId` (r:1 w:1)
	/// Proof: `EthBridge::NextNetworkId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `BridgeMultisig::Accounts` (r:1 w:1)
	/// Proof: `BridgeMultisig::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeStatuses` (r:0 w:1)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Peers` (r:0 w:1)
	/// Proof: `EthBridge::Peers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeContractAddress` (r:0 w:1)
	/// Proof: `EthBridge::BridgeContractAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeSignatureVersions` (r:0 w:1)
	/// Proof: `EthBridge::BridgeSignatureVersions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeAccount` (r:0 w:1)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_bridge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `83`
		//  Estimated: `6196`
		// Minimum execution time: 25_899_000 picoseconds.
		Weight::from_parts(26_860_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `EthBridge::RegisteredAsset` (r:1 w:1)
	/// Proof: `EthBridge::RegisteredAsset` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredSidechainToken` (r:0 w:1)
	/// Proof: `EthBridge::RegisteredSidechainToken` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredSidechainAsset` (r:0 w:1)
	/// Proof: `EthBridge::RegisteredSidechainAsset` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn register_existing_sidechain_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `3698`
		// Minimum execution time: 11_312_000 picoseconds.
		Weight::from_parts(11_682_000, 0)
			.saturating_add(Weight::from_parts(0, 3698))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `EthBridge::RegisteredSidechainToken` (r:1 w:1)
	/// Proof: `EthBridge::RegisteredSidechainToken` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredSidechainAsset` (r:0 w:1)
	/// Proof: `EthBridge::RegisteredSidechainAsset` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RegisteredAsset` (r:0 w:1)
	/// Proof: `EthBridge::RegisteredAsset` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn remove_sidechain_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `320`
		//  Estimated: `3785`
		// Minimum execution time: 11_632_000 picoseconds.
		Weight::from_parts(11_912_000, 0)
			.saturating_add(Weight::from_parts(0, 3785))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `EthBridge::AuthorityAccount` (r:1 w:0)
	/// Proof: `EthBridge::AuthorityAccount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::BridgeStatuses` (r:1 w:0)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Peers` (r:1 w:0)
	/// Proof: `EthBridge::Peers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingPeer` (r:1 w:1)
	/// Proof: `EthBridge::PendingPeer` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestSubmissionHeight` (r:0 w:1)
	/// Proof: `EthBridge::RequestSubmissionHeight` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `420`
		//  Estimated: `6196`
		// Minimum execution time: 41_017_000 picoseconds.
		Weight::from_parts(41_688_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `EthBridge::Peers` (r:1 w:1)
	/// Proof: `EthBridge::Peers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::BridgeAccount` (r:1 w:0)
	/// Proof: `EthBridge::BridgeAccount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BridgeMultisig::Accounts` (r:1 w:1)
	/// Proof: `BridgeMultisig::Accounts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PeerAccountId` (r:0 w:1)
	/// Proof: `EthBridge::PeerAccountId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PeerAddress` (r:0 w:1)
	/// Proof: `EthBridge::PeerAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn force_add_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `506`
		//  Estimated: `3971`
		// Minimum execution time: 22_613_000 picoseconds.
		Weight::from_parts(23_073_000, 0)
			.saturating_add(Weight::from_parts(0, 3971))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `EthBridge::AuthorityAccount` (r:1 w:0)
	/// Proof: `EthBridge::AuthorityAccount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PeerAddress` (r:1 w:0)
	/// Proof: `EthBridge::PeerAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::BridgeStatuses` (r:1 w:0)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Peers` (r:1 w:0)
	/// Proof: `EthBridge::Peers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::PendingPeer` (r:1 w:1)
	/// Proof: `EthBridge::PendingPeer` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestSubmissionHeight` (r:0 w:1)
	/// Proof: `EthBridge::RequestSubmissionHeight` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn remove_peer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `486`
		//  Estimated: `6196`
		// Minimum execution time: 42_680_000 picoseconds.
		Weight::from_parts(43_792_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `EthBridge::AuthorityAccount` (r:1 w:0)
	/// Proof: `EthBridge::AuthorityAccount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::BridgeStatuses` (r:1 w:0)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestSubmissionHeight` (r:0 w:1)
	/// Proof: `EthBridge::RequestSubmissionHeight` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn prepare_for_migration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `283`
		//  Estimated: `3748`
		// Minimum execution time: 31_579_000 picoseconds.
		Weight::from_parts(32_211_000, 0)
			.saturating_add(Weight::from_parts(0, 3748))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `EthBridge::AuthorityAccount` (r:1 w:0)
	/// Proof: `EthBridge::AuthorityAccount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `EthBridge::BridgeStatuses` (r:1 w:0)
	/// Proof: `EthBridge::BridgeStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestStatuses` (r:1 w:1)
	/// Proof: `EthBridge::RequestStatuses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::Requests` (r:1 w:1)
	/// Proof: `EthBridge::Requests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::AccountRequests` (r:1 w:1)
	/// Proof: `EthBridge::AccountRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestsQueue` (r:1 w:1)
	/// Proof: `EthBridge::RequestsQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthBridge::RequestSubmissionHeight` (r:0 w:1)
	/// Proof: `EthBridge::RequestSubmissionHeight` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn migrate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `283`
		//  Estimated: `3748`
		// Minimum execution time: 33_322_000 picoseconds.
		Weight::from_parts(34_254_000, 0)
			.saturating_add(Weight::from_parts(0, 3748))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
}
