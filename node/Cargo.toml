[package]
name = "timechain-node"
build = "build.rs"
description = "A blockchain node using the proof of time consensus."
default-run = "timechain-node"

version.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[package.metadata.docs.rs]
targets = [ "x86_64-unknown-linux-gnu" ]

[[bin]]
name = "timechain-node"

[dependencies]
anyhow.workspace = true
async-channel.workspace = true
async-trait.workspace = true
clap.workspace = true
futures.workspace = true
log.workspace = true
serde.workspace = true
serde_json.workspace = true
tokio.workspace = true
tracing.workspace = true

bincode = "1.3.3"
convert_case = "0.6"
hex-literal = "0.4.1"

polkadot-sdk = { workspace = true, features = [
	"frame-benchmarking",
	"frame-benchmarking-cli",
	"frame-metadata-hash-extension",
	"frame-system",
	"frame-system-rpc-runtime-api",

	"pallet-im-online",
	"pallet-transaction-payment",
	"pallet-transaction-payment-rpc",

	"sc-authority-discovery",
	"sc-basic-authorship",
	"sc-chain-spec",
	"sc-cli",
	"sc-client-api",
	"sc-consensus",
	"sc-consensus-babe",
	"sc-consensus-babe-rpc",
	"sc-consensus-grandpa",
	"sc-consensus-grandpa-rpc",
	"sc-consensus-slots",
	"sc-executor",
	"sc-network",
	"sc-network-sync",
	"sc-offchain",
	"sc-rpc",
	"sc-rpc-api",
	"sc-rpc-spec-v2",
	"sc-service",
	"sc-storage-monitor",
	"sc-sync-state-rpc",
	"sc-sysinfo",
	"sc-telemetry",
	"sc-transaction-pool",
	"sc-transaction-pool-api",

	"sp-api",
	"sp-authority-discovery",
	"sp-block-builder",
	"sp-blockchain",
	"sp-consensus",
	"sp-consensus-babe",
	"sp-consensus-grandpa",
	"sp-core",
	"sp-io",
	"sp-inherents",
	"sp-keyring",
	"sp-keystore",
	"sp-runtime",
	"sp-timestamp",
	"sp-transaction-storage-proof",

	"staging-node-inspect",
	"substrate-frame-rpc-system",
	"substrate-state-trie-migration-rpc",
] }

# node's rpc dependencies
jsonrpsee = { version = "0.22.1", features = [ "server" ] }

# node's local dependencies
time-primitives = { path = "../primitives" }
timechain-runtime = { path = "../runtime" }

# additional command line interfaces
#try-runtime-core = { git = "https://github.com/paritytech/try-runtime-cli", tag = "v0.7.0", optional = true }

[build-dependencies]
polkadot-sdk = { workspace = true, features = [ "substrate-build-script-utils" ] }

[features]
default = [ "std" ]
std = [
	"polkadot-sdk/std"
]
# Dependencies that are only required if runtime benchmarking should be build.
runtime-benchmarks = [
	"polkadot-sdk/runtime-benchmarks",
	"timechain-runtime/runtime-benchmarks"
]
# Enable features that allow the runtime to be tried and debugged.
try-runtime = [
	"polkadot-sdk/try-runtime",
	"timechain-runtime/try-runtime",
	#"try-runtime-core",
]
development = [
	"timechain-runtime/development"
]
